<html>
<head>
    <title>Apollo MLLanguageSelector skinob</title>
    <meta http-equiv="Content-Language" content="nl" />
    <meta http-equiv="Content-Type" content="text/html; charset=windows-1252" />
    <style type="text/css">
        BODY
        {
            font-size: 10pt;
            font-family: verdana, arial, helvetica;
        }
        TD
        {
            font-size: 10pt;
            font-family: verdana, arial, helvetica;
        }
    </style>
</head>
<body>
    <h1>
        Apollo MLLanguageSelector Module/SkinObject</h1>
    <h4>
        Installation</h4>
    <p>
        Installation of the Module/SkinObject is done in the same way as any other&nbsp;DotNetNuke®
        Module: select the option 'module definitions' from the 'Host' menu, and select
        "Upload new module" from the action menu. Select the PA zip file on your local computer,
        and click "upload new file". The selector is now installed. The language selector
        can be used as a skin object or as a module. You can see in the sample skin how
        you can use the selector as a skin object.</p>
    <p>
        The package also contains one sample skin, derived from the standard dnn-blue skin,
        you can install this skin in your portal to start working immediately with the language
        selector. Mind you, the sample skin also contains references to the Apollo PageLocalization
        module. If you did not install Apollo PageLocalization, the skins that have "PL"
        in the name, will not work as expected.</p>
    <h4>
        Upgrading</h4>
    <p>
        If you are using a previous version of MLLanguageSelector, you can just install
        this version in the normal way. However, due to the changes in rendering of the
        selector, if you are using the language selector as a skinobject, and the admin
        skin contains a language selector, you will see a viewstate load error. This error
        will look something like this:</p>
    <blockquote dir="ltr" style="margin-right: 0px">
        <p>
            <font face="Courier New">Failed to load viewstate. The control tree into which viewstate
                is being loaded must match the control tree that was used to save viewstate during
                the previous request. For example, when adding controls dynamically, the controls
                added during a post-back must match the type and position of the controls added
                during the initial request. </font>
        </p>
    </blockquote>
    <p dir="ltr">
        Once you navigate to any other page in your portal, this error will disapperar,
        and everything will be ok.</p>
    <h4 dir="ltr">
        Usage</h4>
    <p>
        The language selector supports 3 modes: menu, flags and hyperlinks. Although you
        can use the 3 modes concurrently, typically you will select either one of the modes.
        The advantage of using the flags mode or the hyperlinksmode is that these modes
        cause the selector to render basic hyperlinks which can be easily followed by any
        search indexing spider. using this will make sure that search engines find all languages
        of your site, not only the default language!</p>
    <p>
        Another feature of the MLLanguageSelector is the ability to map languages to another
        language. This is useful in the following situation: suppose you have a portal that
        supports 3 languages, and you finished adding content for 2 languages, and are still
        working on content for the 3rd language. If your portal is publicly available, your
        visitors will be able to also see the 3th language. If you disable the 3rd language
        in admin&gt;languages, then the language can still be "automatically" selected if
        it's the first preferred language in the browsersettings of the anonymous user.
        Furthermore, you won't be able to select the language yourself, so how would you
        be able to continue adding your content?. Comes in MLLanguageSelector. With the
        MapLanguages feature, you can redirect all requests for the 3rd language to one
        of the 2 other languages, but you yourself will always be able to see and select
        the third language. So you can edit content for your third language in peace, and
        just make it available whenever you like (by removing the mapped language setting).
        Of course mapped languages will be invisible in the language selector</p>
    <p>
        If only one language would be rendered in the selector, and attribute HideCurrent
        has been set to True, then the languageselector will render nothing at all</p>
    <p>
        The module with a basic module.css stylesheet (in the folder /DesktopModules/MLLanguageSelector/),
        which is used for both the module <b>and</b> the skinobject. This stylesheet is
        used to format the tables that are used to render the language selector. You can
        edit these settings, or override them in your skin.css to make the display different.
        You can turn off the usage of the stylesheet for skinobjects by adding the attribute
        <font face="Courier New">UseStyleSheetForSkinobject = "False"</font> to the skinobject
        definition. This option is not available in the module settings, simply because
        it has no meaning for a module. This means that this attribute will not be generated
        by the Generate SkinObject attributes option in the module settings either.</p>
    <h4>
        CSS Classes in Module.CSS</h4>
    <p>
        Rendering of the module/skinobject is done in table form, which is a break from
        previous versions, which rendered the selector as is. The main reason for this change
        is a better control in the layout of the language selector. You can adjust the layout
        by changing the module.css file that comes with the language selector. This is the
        default css file:</p>
    <p align="center">
        <textarea rows="20" cols="50" style="width: 500px">
/* ================================
    CSS STYLES FOR Module/Skinobject Apollo.MLLanguageSelector
   ================================
*/

/* 
   =============================================
   classes for the main layout table
   =============================================
*/


/* use this class to set styles for the entire layout table*/
.MLLanguageMenuLayoutTable
{
  /* enable display:inline if the language selector should be rendered inline, 
     for instance if the selector is not positioned in its own table cell and flags/hyperlinks are visible 
     (otherwise use the class ".MLLanguageMenuTable" to control display) */

  /* display:inline; */
}

/* if display is set to horizontal, only one row is rendered, use this class to style that row*/
.MLLanguageMenuLayoutTableRow1
{
	
}

/* 
	if display is set to vertical, 2 rows can be rendered. One for the label and dropdownmenu, 
	and one for the flags/hyperlinks.
    use this class to style the second row
*/
.MLLanguageMenuLayoutTableRow2
{
	
}


/* 
   =============================================
   classes for the table used to display the dropdownmenu
   =============================================
*/

/* class for the complete table*/
.MLLanguageMenuTable
{
  /* enable display:inline if the language selector should be rendered inline, 
     for instance if the selector is not positioned in its own table cell and only the menu is visible 
     (otherwise use the class ".MLLanguageMenuLayoutTable" to control display) */

  /*display:inline; */
}

/* class for the cell that contains the label */
.MLLanguageMenuLabelCell
{
		white-space:nowrap;
}

/* class for the cell that contains the left flag*/
.MLLanguageMenuLeftFlagCell
{
}

/* class for the cell that contains the dropdown menu */
.MLLanguageMenuMenuCell
{
		white-space:nowrap;
}

/* class for the cell that contains the right flag */
.MLLanguageMenuRightFlagCell
{
}


/* 
   =============================================
   classes for the table which in which the flags and urls are rendered
   =============================================
*/

/* class for the complete table */
.MLLanguageSelectionItemTable
{
	padding:0px;
	margin:0px;
	border:0px;
}

/* class for the cells that contain the flags*/
.MLLanguageSelectionItemFlag
{
	padding:2px;
	margin:0px;
	width:34px;
	text-align:center ;
}

/* class for the cells that contain the hyperlinks*/
.MLLanguageSelectionItemURL
{
	padding:2px;
	margin:0px;
	white-space:nowrap;
	text-align:center ;
}

/* class for the rows that contain the flags and hyperlinks*/
.MLLanguageSelectionItemRow
{
}
			</textarea></p>
    <p>
        <strong>NOTE</strong>: if you are using the language selector with other controls
        in the same placeholder/tablecell in your skin, due to the use of tables, you will
        experience some alignment problems. You have to options: set the display of the
        enclosing table for the selector to <font face="Courier New">inline </font>(either
        in class <font face="Courier New">MLLanguageMenuLayoutTable</font> or in class <font
            face="Courier New">MLLanguageMenuTable</font>, depending on whether you are
        showing&nbsp;flags/hyperlinks)</p>
    <h4>
        Attributes for the SkinObject</h4>
    <p>
        If you use the selector as a skin object, you can pass a couple of parameters to
        the language selector, with these parameters you control the behavior. These same
        parameters can be set if you use the selector as a module, via the module settings
        option. <b>NB</b>: from the module settings page, you can generate the correct attributes
        for use with the skinobject. You can choose to either generate ascx type attributes,
        which will generate the complete skinobject for you, or xml type attributes, which
        will generate the correct xml settings for the language selector.</p>
    <p>
        The following settings / parameters are supported:</p>
    <table id="table6" style="border-collapse: collapse" cellpadding="3" border="1" class="normal"
        bordercolor="#000000">
        <tr>
            <td valign="top">
                <b>parameter</b>
            </td>
            <td valign="top">
                <b>use</b>
            </td>
            <td valign="top">
                <b>allowed values</b>
            </td>
            <td valign="top">
                <b>default value</b>
            </td>
        </tr>
        <tr>
            <td valign="top">
                DisplayType
            </td>
            <td valign="top">
                Selects how the name of the language is rendered. Resourcename means that the names
                for languages will be pulled from the resource file. This is usefull if the automatic
                language/country name is not to your liking. The resources can be found in the file
                MLLanguageSelector.ascx.[Locale].resx
            </td>
            <td valign="top">
                <p>
                    EnglishName<br />
                    Lcid<br />
                    Name<br />
                    NativeName<br />
                    TwoLetterISOCode<br />
                    ThreeLetterISOCode<br />
                    NativeLanguageName<br />
                    EnglishLanguageName<br />
                    ResourceName</p>
            </td>
            <td valign="top">
                NativeLanguageName
            </td>
        </tr>
        <tr>
            <td valign="top">
                cssClass
            </td>
            <td valign="top">
                Sets the style of the dropdown menu and the links
            </td>
            <td valign="top">
                any valid css class name
            </td>
            <td valign="top">
                skinobject
            </td>
        </tr>
        <tr>
            <td valign="top">
                Alignment
            </td>
            <td valign="top">
                To render&nbsp; the links and/or flags of the selector horizontal or vertical
            </td>
            <td valign="top">
                Horizontal<br />
                Vertical
            </td>
            <td valign="top">
                Horizontal
            </td>
        </tr>
        <tr>
            <td valign="top">
                Separator
            </td>
            <td valign="top">
                To separate the links/flags. Use cssClass to format the separator
            </td>
            <td valign="top">
                any valid html
            </td>
            <td valign="top">
                empty
            </td>
        </tr>
        <tr>
            <td valign="top">
                hideCurrent
            </td>
            <td valign="top">
                Hides the current selected language in the flag/links view. A special case is the
                use of this attribute in combination with the Menu. Due to the nature of the dropdown
                menu, hidecurrent is not supported for the menu, as this would hide the current
                language, making a different language seemingly selected in the selector. That language
                can not be selected, because it is already "selected". There is one exception to
                this: if there is only one language available for display in the menu, the menu
                (and the flagimage for the active language) will be invisible.
            </td>
            <td valign="top">
                True<br />
                False
            </td>
            <td valign="top">
                True
            </td>
        </tr>
        <tr>
            <td valign="top">
                Hyperlinks
            </td>
            <td valign="top">
                Show hyperlinks. This will render a hyperlink for all available languages
            </td>
            <td valign="top">
                True<br />
                False
            </td>
            <td valign="top">
                False
            </td>
        </tr>
        <tr>
            <td valign="top">
                Flags
            </td>
            <td valign="top">
                Shows flags. This will render a flag image/hyperlink for all available languages.
                All flags for DotNetNuke supported cultures (which is a subset of all asp.net 1.1
                supported cultures) are included, in total 110. If you want to use your own flag,
                save a .gif image in the "flags" directory of the selector directory (the selector
                is installed in /desktopmodules/MLLanguageSelector/). Name your files after the
                2-letter <a target="_blank" href="http://www.iso.org/iso/en/prods-services/iso3166ma/02iso-3166-code-lists/list-en1.html">
                    iso 3166</a> countrycode (so for instance "us.gif" for United States)
            </td>
            <td valign="top">
                True<br />
                False
            </td>
            <td valign="top">
                False
            </td>
        </tr>
        <tr>
            <td valign="top">
                Menu
            </td>
            <td valign="top">
                Show menu. This will render language dropdown menu. See remarks for attribute HideCurrent.
            </td>
            <td valign="top">
                True<br />
                False
            </td>
            <td valign="top">
                True
            </td>
        </tr>
        <tr>
            <td valign="top">
                MenuFlagPosition
            </td>
            <td valign="top">
                Setting to display a flag for the current selected language left or right from the
                pulldown menu
            </td>
            <td valign="top">
                None<br />
                Left<br />
                Right
            </td>
            <td valign="top">
                None
            </td>
        </tr>
        <tr>
            <td valign="top">
                displayLabel
            </td>
            <td valign="top">
                Show a label in front of the selector
            </td>
            <td valign="top">
                True<br />
                False
            </td>
            <td valign="top">
                False
            </td>
        </tr>
        <tr>
            <td valign="top">
                LabelCSSClass
            </td>
            <td valign="top">
                CSS class to be used for the label
            </td>
            <td valign="top">
                any valid cssclass
            </td>
            <td valign="top">
                skinobject
            </td>
        </tr>
        <tr>
            <td valign="top">
                OnlyLanguageCode
            </td>
            <td valign="top">
                Use only language codes to switch languages (ie: "en" instead of "en-US"). This
                setting has not real impact, other than a small cleanup in your url: instead of
                language=en-US you will see: language=en. Note: if you have multiple locales for
                the same language installed (eg. en-US and en-GB, then this setting will cause one
                of the locales to be allways selected for both locales.
            </td>
            <td valign="top">
                True<br />
                False
            </td>
            <td valign="top">
                False
            </td>
        </tr>
        <tr>
            <td valign="top">
                ForceHidden
            </td>
            <td valign="top">
                Force the language selector to be invisible. Use this setting if you want to use
                the language selector only as a language mapping control
            </td>
            <td valign="top">
                True<br />
                False
            </td>
            <td valign="top">
                False
            </td>
        </tr>
        <tr>
            <td valign="top">
                UseStyleSheetForSkinobject
            </td>
            <td valign="top">
                Load module.css when only the skinobject is used. Disable loading of module.css
                when you get unwanted interference in your skin.css
            </td>
            <td valign="top">
                True<br />
                False
            </td>
            <td valign="top">
                True
            </td>
        </tr>
        <tr>
            <td valign="top">
                MapLanguages
            </td>
            <td valign="top">
                Setting for mapping languages from one language to another. By mapping is meant:
                redirect requests for mapped language to destination language. Syntax: [sourceLocale]:[destinationLocale].
                You can add multiple mapped languages by seperating the mappings by a semicolon
                (;).
                <br />
                Eg.: "en-US:en-GB;de-DE:nl-NL" for a Dutch site with 4 installed locales: en-US,
                en-GB, de-DE and nl-NL. We want all english requests to be redirected to the en-GB
                version of our site, and for the time being, while we work on the German version
                of our site, we want to redirect our German visitors to our Dutch site.
            </td>
            <td valign="top">
                [sourceLocale]:[destinationLocale]
            </td>
            <td valign="top">
                empty
            </td>
        </tr>
        <tr>
            <td valign="top">
                MapDomains
            </td>
            <td valign="top">
                Setting for mapping domains to a specific languages.&nbsp;At this moment only fully
                qualified domain names are supported, which means that the domain name cannot contain
                a forward slash ("/"). &nbsp;
            </td>
            <td valign="top">
                [fully qualified domain name]:[destinationLocale]
            </td>
            <td valign="top">
                empty
            </td>
        </tr>
        <tr>
            <td valign="top">
                useFullLocaleCode
            </td>
            <td valign="top">
                Setting which allows you to set the way flag images are referenced. This is a change
                from earlier versions, the default value is True, which means that flags are referenced
                with the full locale code, ie. nl-NL or en-US
            </td>
            <td valign="top">
                True<br />
                False
            </td>
            <td valign="top">
                True
            </td>
        </tr>
        <tr>
            <td valign="top">
                tableLess
            </td>
            <td valign="top">
                As there is a lot of focus on tableless designs, you can now let the selector render
                tableless as well. The default is False, to prevent breaking of skins
            </td>
            <td valign="top">
                True<br />
                False
            </td>
            <td valign="top">
                True
            </td>
        </tr>
        <tr>
            <td valign="top">
                altFlagLocation
            </td>
            <td valign="top">
                You can now use your own flag images. If you use this attribute, the foldername
                should be relative from the portal root directory. If your portalID is 1, you might
                pass this value: "flags/16x16". The full name for a Dutch flag would then be: /portals/1/flags/16x16/nl-NL.gif.
            </td>
            <td valign="top">
                any valid path under the portal root dir
            </td>
            <td valign="top">
                empty
            </td>
        </tr>
        <tr>
            <td valign="top">
                altImageType
            </td>
            <td valign="top">
                If your alternative flag images are not gif but png or something else, you can pass
                a different extension with this parameter
            </td>
            <td valign="top">
                any valid image extension. You do not need to use the preceding dot
            </td>
            <td valign="top">
                empty
            </td>
        </tr>
        <tr>
            <td valign="top">
                FlagType
            </td>
            <td valign="top">
                Allows you to choose from (currently) 2 different flagtypes: simple and modern.
                The default value is &quot;simple&quot;
            </td>
            <td valign="top">
                simple<br />
                modern
            </td>
            <td valign="top">
                simple
            </td>
        </tr>
    </table>
    <hr />
    <p>
        (c) 2005-2009 - Apollo Software - <a href="http://www.apollo-software.nl">www.apollo-software.nl</a>
    </p>
</body>
</html>
