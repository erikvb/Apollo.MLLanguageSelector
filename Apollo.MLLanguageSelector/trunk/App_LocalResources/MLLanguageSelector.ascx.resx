<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Label.Text" xml:space="preserve">
    <value>Select language:</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>		&lt;h1&gt;Apollo MLLanguageSelector Module/SkinObject&lt;/h1&gt;
		&lt;h4&gt;Installation&lt;/h4&gt;
		&lt;p&gt;
			Installation of the Module/SkinObject is done in the same way as any 
			other&amp;nbsp;DotNetNukeÂ® Module: select the option 'module definitions' from the 
			'Host' menu, and select "Upload new module" from the action menu. Select the PA 
			zip file on your local computer, and click "upload new file". The selector is 
			now installed. The language selector can be used as a skin object or as a 
			module. You can see in the sample skin how you can use the selector as a skin 
			object.&lt;/p&gt;
		&lt;p&gt;The package also contains one sample skin, derived from the standard dnn-blue 
			skin, you can install this skin in your portal to start working immediately 
			with the language selector. Mind you, the sample skin also contains references 
			to the Apollo PageLocalization module. If you did not install Apollo 
			PageLocalization, the skins that have "PL" in the name, will not work as 
			expected.&lt;/p&gt;
		&lt;H4&gt;Upgrading&lt;/H4&gt;
		&lt;P&gt;If you are using a previous version of MLLanguageSelector, you can just install 
			this version in the normal way. However, due to the changes in rendering of the 
			selector, if you are using the language selector as a skinobject, and the admin 
			skin contains a language selector, you will see a viewstate load error. This 
			error will look something like this:&lt;/P&gt;
		&lt;BLOCKQUOTE dir="ltr" style="MARGIN-RIGHT: 0px"&gt;
			&lt;P&gt;&lt;FONT face="Courier New"&gt;Failed to load viewstate. The control tree into which 
					viewstate is being loaded must match the control tree that was used to save 
					viewstate during the previous request. For example, when adding controls 
					dynamically, the controls added during a post-back must match the type and 
					position of the controls added during the initial request. &lt;/FONT&gt;
			&lt;/P&gt;
		&lt;/BLOCKQUOTE&gt;
		&lt;P dir="ltr"&gt;Once you navigate to any other page in your portal, this error will 
			disapperar, and everything will be ok.&lt;/P&gt;
		&lt;H4 dir="ltr"&gt;Usage&lt;/H4&gt;
		&lt;p&gt;The language selector supports 3 modes: menu, flags and hyperlinks. Although you 
			can use the 3 modes concurrently, typically you will select either one of the 
			modes. The advantage of using the flags mode or the hyperlinksmode is that 
			these modes cause the selector to render basic hyperlinks which can be easily 
			followed by any search indexing spider. using this will make sure that search 
			engines find all languages of your site, not only the default language!&lt;/p&gt;
		&lt;p&gt;
			Another feature of the MLLanguageSelector is the ability to map languages to 
			another language. This is useful in the following situation: suppose you have a 
			portal that supports 3 languages, and you finished adding content for 2 
			languages, and are still working on content for the 3rd language. If your 
			portal is publicly available, your visitors will be able to also see the 3th 
			language. If you disable the 3rd language in admin&amp;gt;languages, then the 
			language can still be "automatically" selected if it's the first preferred 
			language in the browsersettings of the anonymous user. Furthermore, you won't 
			be able to select the language yourself, so how would you be able to continue 
			adding your content?. Comes in MLLanguageSelector. With the MapLanguages 
			feature, you can redirect all requests for the 3rd language to one of the 2 
			other languages, but you yourself will always be able to see and select the 
			third language. So you can edit content for your third language in peace, and 
			just make it available whenever you like (by removing the mapped language 
			setting). Of course mapped languages will be invisible in the language selector&lt;/p&gt;
		&lt;p&gt;If only one language would be rendered in the selector, and attribute 
			HideCurrent has been set to True, then the languageselector will render nothing 
			at all&lt;/p&gt;
		&lt;p&gt;The module with a basic module.css stylesheet (in the folder 
			/DesktopModules/MLLanguageSelector/), which is used for both the module &lt;b&gt;and&lt;/b&gt;
			the skinobject. This stylesheet is used to format the tables that are used to 
			render the language selector. You can edit these settings, or override them in 
			your skin.css to make the display different. You can turn off the usage of the 
			stylesheet for skinobjects by adding the attribute &lt;font face="Courier New"&gt;UseStyleSheetForSkinobject 
				= "False"&lt;/font&gt; to the skinobject definition. This option is not available 
			in the module settings, simply because it has no meaning for a module. This 
			means that this attribute will not be generated by the Generate SkinObject 
			attributes option in the module settings either.&lt;/p&gt;
		&lt;H4&gt;CSS Classes in Module.CSS&lt;/H4&gt;
		&lt;P&gt;Rendering of the module/skinobject is done in table form, which is a break from 
			previous versions, which rendered the selector as is. The main reason for this 
			change is a better control in the layout of the language selector. You can 
			adjust the layout by changing the module.css file that comes with the language 
			selector. This is the default css file:&lt;/P&gt;
		&lt;P align="center"&gt;
			&lt;textarea rows="20" style="WIDTH:500px"&gt;
/* ================================
    CSS STYLES FOR Module/Skinobject Apollo.MLLanguageSelector
   ================================
*/

/* 
   =============================================
   classes for the main layout table
   =============================================
*/


/* use this class to set styles for the entire layout table*/
.MLLanguageMenuLayoutTable
{
  /* enable display:inline if the language selector should be rendered inline, 
     for instance if the selector is not positioned in its own table cell and flags/hyperlinks are visible 
     (otherwise use the class ".MLLanguageMenuTable" to control display) */

  /* display:inline; */
}

/* if display is set to horizontal, only one row is rendered, use this class to style that row*/
.MLLanguageMenuLayoutTableRow1
{
	
}

/* 
	if display is set to vertical, 2 rows can be rendered. One for the label and dropdownmenu, 
	and one for the flags/hyperlinks.
    use this class to style the second row
*/
.MLLanguageMenuLayoutTableRow2
{
	
}


/* 
   =============================================
   classes for the table used to display the dropdownmenu
   =============================================
*/

/* class for the complete table*/
.MLLanguageMenuTable
{
  /* enable display:inline if the language selector should be rendered inline, 
     for instance if the selector is not positioned in its own table cell and only the menu is visible 
     (otherwise use the class ".MLLanguageMenuLayoutTable" to control display) */

  /*display:inline; */
}

/* class for the cell that contains the label */
.MLLanguageMenuLabelCell
{
		white-space:nowrap;
}

/* class for the cell that contains the left flag*/
.MLLanguageMenuLeftFlagCell
{
}

/* class for the cell that contains the dropdown menu */
.MLLanguageMenuMenuCell
{
		white-space:nowrap;
}

/* class for the cell that contains the right flag */
.MLLanguageMenuRightFlagCell
{
}


/* 
   =============================================
   classes for the table which in which the flags and urls are rendered
   =============================================
*/

/* class for the complete table */
.MLLanguageSelectionItemTable
{
	padding:0px;
	margin:0px;
	border:0px;
}

/* class for the cells that contain the flags*/
.MLLanguageSelectionItemFlag
{
	padding:2px;
	margin:0px;
	width:34px;
	text-align:center ;
}

/* class for the cells that contain the hyperlinks*/
.MLLanguageSelectionItemURL
{
	padding:2px;
	margin:0px;
	white-space:nowrap;
	text-align:center ;
}

/* class for the rows that contain the flags and hyperlinks*/
.MLLanguageSelectionItemRow
{
}
			&lt;/textarea&gt;&lt;/P&gt;
		&lt;P&gt;&lt;STRONG&gt;NOTE&lt;/STRONG&gt;: if you are using the language selector with other 
			controls in the same placeholder/tablecell in your skin, due to the use of 
			tables, you will experience some alignment problems. You have to options: set 
			the display of the enclosing table for the selector to &lt;FONT face="Courier New"&gt;inline
			&lt;/FONT&gt;(either in class &lt;FONT face="Courier New"&gt;MLLanguageMenuLayoutTable&lt;/FONT&gt;
			or in class &lt;FONT face="Courier New"&gt;MLLanguageMenuTable&lt;/FONT&gt;, depending on 
			whether you are showing&amp;nbsp;flags/hyperlinks)&lt;/P&gt;
		&lt;h4&gt;Attributes for the SkinObject&lt;/h4&gt;
		&lt;p&gt;If you use the selector as a skin object, you can pass a couple of parameters to 
			the language selector, with these parameters you control the behavior. These 
			same parameters can be set if you use the selector as a module, via the module 
			settings option. &lt;b&gt;NB&lt;/b&gt;: from the module settings page, you can generate the 
			correct attributes for use with the skinobject. You can choose to either 
			generate ascx type attributes, which will generate the complete skinobject for 
			you, or xml type attributes, which will generate the correct xml settings for 
			the language selector.&lt;/p&gt;
		&lt;P&gt;The following settings / parameters are supported:&lt;/P&gt;
		&lt;table id="table6" style="BORDER-COLLAPSE: collapse" cellpadding="3" border="1" class="normal"
			bordercolor="#000000"&gt;
			&lt;tr&gt;
				&lt;td valign="top"&gt;&lt;b&gt;parameter&lt;/b&gt;&lt;/td&gt;
				&lt;td valign="top"&gt;&lt;b&gt;use&lt;/b&gt;&lt;/td&gt;
				&lt;td valign="top"&gt;&lt;b&gt;allowed values&lt;/b&gt;&lt;/td&gt;
				&lt;td valign="top"&gt;&lt;b&gt;default value&lt;/b&gt;&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td valign="top"&gt;DisplayType&lt;/td&gt;
				&lt;td valign="top"&gt;Selects how the name of the language is rendered. Resourcename 
					means that the names for languages will be pulled from the resource file. This 
					is usefull if the automatic language/country name is not to your liking. The 
					resources can be found in the file MLLanguageSelector.ascx.[Locale].resx&lt;/td&gt;
				&lt;td valign="top"&gt;
					&lt;P&gt;EnglishName&lt;br&gt;
						Lcid&lt;br&gt;
						Name&lt;br&gt;
						NativeName&lt;br&gt;
						TwoLetterISOCode&lt;br&gt;
						ThreeLetterISOCode&lt;br&gt;
						NativeLanguageName&lt;br&gt;
						EnglishLanguageName&lt;BR&gt;
						ResourceName&lt;/P&gt;
				&lt;/td&gt;
				&lt;td valign="top"&gt;NativeLanguageName&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td valign="top"&gt;cssClass&lt;/td&gt;
				&lt;td valign="top"&gt;Sets the style of the dropdown menu and the links&lt;/td&gt;
				&lt;td valign="top"&gt;any valid css class name&lt;/td&gt;
				&lt;td valign="top"&gt;skinobject&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td valign="top"&gt;Alignment&lt;/td&gt;
				&lt;td valign="top"&gt;To render&amp;nbsp; the links and/or flags of the selector horizontal 
					or vertical&lt;/td&gt;
				&lt;td valign="top"&gt;Horizontal&lt;br&gt;
					Vertical&lt;/td&gt;
				&lt;td valign="top"&gt;Horizontal&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td valign="top"&gt;Separator&lt;/td&gt;
				&lt;td valign="top"&gt;To separate the links/flags. Use cssClass to format the separator&lt;/td&gt;
				&lt;td valign="top"&gt;any valid html&lt;/td&gt;
				&lt;td valign="top"&gt;empty&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td valign="top"&gt;hideCurrent&lt;/td&gt;
				&lt;td valign="top"&gt;Hides the current selected language in the flag/links view. A 
					special case is the use of this attribute in combination with the Menu. Due to 
					the nature of the dropdown menu, hidecurrent is not supported for the menu, as 
					this would hide the current language, making a different language seemingly 
					selected in the selector. That language can not be selected, because it is 
					already "selected". There is one exception to this: if there is only one 
					language available for display in the menu, the menu (and the flagimage for the 
					active language) will be invisible.&lt;/td&gt;
				&lt;td valign="top"&gt;True&lt;br&gt;
					False&lt;/td&gt;
				&lt;td valign="top"&gt;True&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td valign="top"&gt;Hyperlinks&lt;/td&gt;
				&lt;td valign="top"&gt;Show hyperlinks. This will render a hyperlink for all available 
					languages&lt;/td&gt;
				&lt;td valign="top"&gt;True&lt;br&gt;
					False&lt;/td&gt;
				&lt;td valign="top"&gt;False&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td valign="top"&gt;Flags&lt;/td&gt;
				&lt;td valign="top"&gt;Shows flags. This will render a flag image/hyperlink for all 
					available languages. All flags for DotNetNuke supported cultures (which is a 
					subset of all asp.net 1.1 supported cultures) are included, in total 110. If 
					you want to use your own flag, save a .gif image in the "flags" directory of 
					the selector directory (the selector is installed in 
					/desktopmodules/MLLanguageSelector/). Name your files after the 2-letter &lt;a target="_blank" href="http://www.iso.org/iso/en/prods-services/iso3166ma/02iso-3166-code-lists/list-en1.html"&gt;
						iso 3166&lt;/a&gt; countrycode (so for instance "us.gif" for United States)&lt;/td&gt;
				&lt;td valign="top"&gt;True&lt;br&gt;
					False&lt;/td&gt;
				&lt;td valign="top"&gt;False&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td valign="top"&gt;Menu&lt;/td&gt;
				&lt;td valign="top"&gt;Show menu. This will render language dropdown menu. See remarks 
					for attribute HideCurrent.&lt;/td&gt;
				&lt;td valign="top"&gt;True&lt;br&gt;
					False&lt;/td&gt;
				&lt;td valign="top"&gt;True&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td valign="top"&gt;MenuFlagPosition&lt;/td&gt;
				&lt;td valign="top"&gt;Setting to display a flag for the current selected language left 
					or right from the pulldown menu&lt;/td&gt;
				&lt;td valign="top"&gt;None&lt;br&gt;
					Left&lt;br&gt;
					Right&lt;/td&gt;
				&lt;td valign="top"&gt;None&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td valign="top"&gt;displayLabel&lt;/td&gt;
				&lt;td valign="top"&gt;Show a label in front of the selector&lt;/td&gt;
				&lt;td valign="top"&gt;True&lt;br&gt;
					False&lt;/td&gt;
				&lt;td valign="top"&gt;False&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td valign="top"&gt;LabelCSSClass&lt;/td&gt;
				&lt;td valign="top"&gt;CSS class to be used for the label&lt;/td&gt;
				&lt;td valign="top"&gt;any valid cssclass&lt;/td&gt;
				&lt;td valign="top"&gt;skinobject&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td valign="top"&gt;OnlyLanguageCode&lt;/td&gt;
				&lt;td valign="top"&gt;Use only language codes to switch languages (ie: "en" instead of 
					"en-US"). This setting has not real impact, other than a small cleanup in your 
					url: instead of language=en-US you will see: language=en. Note: if you have 
					multiple locales for the same language installed (eg. en-US and en-GB, then 
					this setting will cause one of the locales to be allways selected for both 
					locales.&lt;/td&gt;
				&lt;td valign="top"&gt;True&lt;br&gt;
					False&lt;/td&gt;
				&lt;td valign="top"&gt;False&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td valign="top"&gt;ForceHidden&lt;/td&gt;
				&lt;td valign="top"&gt;Force the language selector to be invisible. Use this setting if 
					you want to use the language selector only as a language mapping control&lt;/td&gt;
				&lt;td valign="top"&gt;True&lt;br&gt;
					False&lt;/td&gt;
				&lt;td valign="top"&gt;False&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td valign="top"&gt;UseStyleSheetForSkinobject&lt;/td&gt;
				&lt;td valign="top"&gt;Load module.css when only the skinobject is used. Disable loading 
					of module.css when you get unwanted interference in your skin.css&lt;/td&gt;
				&lt;td valign="top"&gt;True&lt;br&gt;
					False&lt;/td&gt;
				&lt;td valign="top"&gt;True&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;
				&lt;td valign="top"&gt;MapLanguages&lt;/td&gt;
				&lt;td valign="top"&gt;Setting for mapping languages from one language to another. By 
					mapping is meant: redirect requests for mapped language to destination 
					language. Syntax: [sourceLocale]:[destinationLocale]. You can add multiple 
					mapped languages by seperating the mappings by a semicolon (;).
					&lt;br&gt;
					Eg.: "en-US:en-GB;de-DE:nl-NL" for a Dutch site with 4 installed locales: 
					en-US, en-GB, de-DE and nl-NL. We want all english requests to be redirected to 
					the en-GB version of our site, and for the time being, while we work on the 
					German version of our site, we want to redirect our German visitors to our 
					Dutch site.&lt;/td&gt;
				&lt;td valign="top"&gt;[sourceLocale]:[destinationLocale]&lt;/td&gt;
				&lt;td valign="top"&gt;empty&lt;/td&gt;
			&lt;/tr&gt;
			&lt;TR&gt;
				&lt;TD vAlign="top"&gt;useFullLocaleCode&lt;/TD&gt;
				&lt;TD vAlign="top"&gt;Setting which allows you to set the way flag images are 
					referenced. This is a change from earlier versions, the default value is True, 
					which means that flags are referenced with the full locale code, ie. nl-NL or 
					en-US&lt;/TD&gt;
				&lt;TD vAlign="top"&gt;True&lt;BR&gt;
					False&lt;/TD&gt;
				&lt;TD vAlign="top"&gt;True&lt;/TD&gt;
			&lt;/TR&gt;
			&lt;TR&gt;
				&lt;TD vAlign="top"&gt;tableLess&lt;/TD&gt;
				&lt;TD vAlign="top"&gt;As there is a lot of focus on tableless designs, you can now let 
					the selector render tableless as well. The default is False, to prevent 
					breaking of skins&lt;/TD&gt;
				&lt;TD vAlign="top"&gt;True&lt;BR&gt;
					False&lt;/TD&gt;
				&lt;TD vAlign="top"&gt;True&lt;/TD&gt;
			&lt;/TR&gt;
			&lt;TR&gt;
				&lt;TD vAlign="top"&gt;altFlagLocation&lt;/TD&gt;
				&lt;TD vAlign="top"&gt;You can now use your own flag images. If you use this attribute, 
					the foldername should be relative from the portal root directory. If your 
					portalID is 1, you might pass this value: "flags/16x16". The full name for a 
					Dutch flag would then be: /portals/1/flags/16x16/nl-NL.gif.&lt;/TD&gt;
				&lt;TD vAlign="top"&gt;any valid path under the portal root dir&lt;/TD&gt;
				&lt;TD vAlign="top"&gt;empty&lt;/TD&gt;
			&lt;/TR&gt;
			&lt;TR&gt;
				&lt;TD vAlign="top"&gt;altImageType&lt;/TD&gt;
				&lt;TD vAlign="top"&gt;If your alternative flag images are not gif but png or something 
					else, you can pass a different extension with this parameter&lt;/TD&gt;
				&lt;TD vAlign="top"&gt;any valid image extension. You do not need to use the preceding 
					dot&lt;/TD&gt;
				&lt;TD vAlign="top"&gt;empty&lt;/TD&gt;
			&lt;/TR&gt;
		&lt;/table&gt;
		&lt;HR&gt;
		&lt;P&gt;(c) 2005 - Apollo Software - &lt;A href="http://www.apollo-software.nl"&gt;www.apollo-software.nl&lt;/A&gt;
</value>
  </data>
  <data name="Config.Action" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="MappedLanguages.Info" xml:space="preserve">
    <value>The following locales have been mapped, but are visible to you because you are a portal administrator: {0}</value>
  </data>
  <data name="ar-AE.Text" xml:space="preserve">
    <value>United Arab Emirates</value>
  </data>
  <data name="fa-AF.Text" xml:space="preserve">
    <value>Afghanistan</value>
  </data>
  <data name="ps-AF.Text" xml:space="preserve">
    <value>Afghanistan</value>
  </data>
  <data name="sq-AL.Text" xml:space="preserve">
    <value>Albania</value>
  </data>
  <data name="hy-AM.Text" xml:space="preserve">
    <value>Armenia</value>
  </data>
  <data name="es-AR.Text" xml:space="preserve">
    <value>Argentina</value>
  </data>
  <data name="de-AT.Text" xml:space="preserve">
    <value>Austria</value>
  </data>
  <data name="en-AU.Text" xml:space="preserve">
    <value>Australia</value>
  </data>
  <data name="az-AZ.Text" xml:space="preserve">
    <value>Azerbaijan</value>
  </data>
  <data name="bs-BA-Cyrl.Text" xml:space="preserve">
    <value>Bosnia and Herzegovina</value>
  </data>
  <data name="bs-BA-Latn.Text" xml:space="preserve">
    <value>Bosnia and Herzegovina</value>
  </data>
  <data name="hr-BA.Text" xml:space="preserve">
    <value>Bosnia and Herzegovina</value>
  </data>
  <data name="sr-BA-Cyrl.Text" xml:space="preserve">
    <value>Bosnia and Herzegovina</value>
  </data>
  <data name="sr-BA-Latn.Text" xml:space="preserve">
    <value>Bosnia and Herzegovina</value>
  </data>
  <data name="fr-BE.Text" xml:space="preserve">
    <value>Belgium</value>
  </data>
  <data name="nl-BE.Text" xml:space="preserve">
    <value>Belgium</value>
  </data>
  <data name="bg-BG.Text" xml:space="preserve">
    <value>Bulgaria</value>
  </data>
  <data name="ar-BH.Text" xml:space="preserve">
    <value>Bahrain</value>
  </data>
  <data name="ms-BN.Text" xml:space="preserve">
    <value>Brunei Darussalam</value>
  </data>
  <data name="es-BO.Text" xml:space="preserve">
    <value>Bolivia</value>
  </data>
  <data name="quz-BO.Text" xml:space="preserve">
    <value>Bolivia</value>
  </data>
  <data name="pt-BR.Text" xml:space="preserve">
    <value>Brazil</value>
  </data>
  <data name="be-BY.Text" xml:space="preserve">
    <value>Belarus</value>
  </data>
  <data name="en-BZ.Text" xml:space="preserve">
    <value>Belize</value>
  </data>
  <data name="en-CA.Text" xml:space="preserve">
    <value>Canada</value>
  </data>
  <data name="fr-CA.Text" xml:space="preserve">
    <value>Canada</value>
  </data>
  <data name="iu-CA-Latn.Text" xml:space="preserve">
    <value>Canada</value>
  </data>
  <data name="moh-CA.Text" xml:space="preserve">
    <value>Canada</value>
  </data>
  <data name="de-CH.Text" xml:space="preserve">
    <value>Switzerland</value>
  </data>
  <data name="fr-CH.Text" xml:space="preserve">
    <value>Switzerland</value>
  </data>
  <data name="it-CH.Text" xml:space="preserve">
    <value>Switzerland</value>
  </data>
  <data name="rm-CH.Text" xml:space="preserve">
    <value>Switzerland</value>
  </data>
  <data name="arn-CL.Text" xml:space="preserve">
    <value>Chile</value>
  </data>
  <data name="es-CL.Text" xml:space="preserve">
    <value>Chile</value>
  </data>
  <data name="zh-CN.Text" xml:space="preserve">
    <value>China</value>
  </data>
  <data name="es-CO.Text" xml:space="preserve">
    <value>Colombia</value>
  </data>
  <data name="es-CR.Text" xml:space="preserve">
    <value>Costa Rica</value>
  </data>
  <data name="cs-CZ.Text" xml:space="preserve">
    <value>Czech Republic</value>
  </data>
  <data name="de-DE.Text" xml:space="preserve">
    <value>Germany</value>
  </data>
  <data name="wen-DE.Text" xml:space="preserve">
    <value>Germany</value>
  </data>
  <data name="da-DK.Text" xml:space="preserve">
    <value>Denmark</value>
  </data>
  <data name="es-DO.Text" xml:space="preserve">
    <value>Dominican Republic</value>
  </data>
  <data name="ar-DZ.Text" xml:space="preserve">
    <value>Algeria</value>
  </data>
  <data name="es-EC.Text" xml:space="preserve">
    <value>Ecuador</value>
  </data>
  <data name="quz-EC.Text" xml:space="preserve">
    <value>Ecuador</value>
  </data>
  <data name="et-EE.Text" xml:space="preserve">
    <value>Estonia</value>
  </data>
  <data name="ar-EG.Text" xml:space="preserve">
    <value>Egypt</value>
  </data>
  <data name="ca-ES.Text" xml:space="preserve">
    <value>Spain</value>
  </data>
  <data name="es-ES.Text" xml:space="preserve">
    <value>Spain</value>
  </data>
  <data name="eu-ES.Text" xml:space="preserve">
    <value>Spain</value>
  </data>
  <data name="gl-ES.Text" xml:space="preserve">
    <value>Spain</value>
  </data>
  <data name="fi-FI.Text" xml:space="preserve">
    <value>Finland</value>
  </data>
  <data name="se-FI.Text" xml:space="preserve">
    <value>Finland</value>
  </data>
  <data name="smn-FI.Text" xml:space="preserve">
    <value>Finland</value>
  </data>
  <data name="sms-FI.Text" xml:space="preserve">
    <value>Finland</value>
  </data>
  <data name="sv-FI.Text" xml:space="preserve">
    <value>Finland</value>
  </data>
  <data name="fo-FO.Text" xml:space="preserve">
    <value>Faroe Islands</value>
  </data>
  <data name="fr-FR.Text" xml:space="preserve">
    <value>France</value>
  </data>
  <data name="cy-GB.Text" xml:space="preserve">
    <value>United Kingdom</value>
  </data>
  <data name="en-GB.Text" xml:space="preserve">
    <value>United Kingdom</value>
  </data>
  <data name="ka-GE.Text" xml:space="preserve">
    <value>Georgia</value>
  </data>
  <data name="el-GR.Text" xml:space="preserve">
    <value>Greece</value>
  </data>
  <data name="es-GT.Text" xml:space="preserve">
    <value>Guatemala</value>
  </data>
  <data name="zh-HK.Text" xml:space="preserve">
    <value>Hong Kong</value>
  </data>
  <data name="es-HN.Text" xml:space="preserve">
    <value>Honduras</value>
  </data>
  <data name="hr-HR.Text" xml:space="preserve">
    <value>Croatia</value>
  </data>
  <data name="zh-HT.Text" xml:space="preserve">
    <value>Haiti</value>
  </data>
  <data name="hu-HU.Text" xml:space="preserve">
    <value>Hungary</value>
  </data>
  <data name="id-ID.Text" xml:space="preserve">
    <value>Indonesia</value>
  </data>
  <data name="en-IE.Text" xml:space="preserve">
    <value>Ireland</value>
  </data>
  <data name="ga-IE.Text" xml:space="preserve">
    <value>Ireland</value>
  </data>
  <data name="he-IL.Text" xml:space="preserve">
    <value>Israel</value>
  </data>
  <data name="bn-IN.Text" xml:space="preserve">
    <value>India</value>
  </data>
  <data name="gu-IN.Text" xml:space="preserve">
    <value>India</value>
  </data>
  <data name="hi-IN.Text" xml:space="preserve">
    <value>India</value>
  </data>
  <data name="kn-IN.Text" xml:space="preserve">
    <value>India</value>
  </data>
  <data name="kok-IN.Text" xml:space="preserve">
    <value>India</value>
  </data>
  <data name="ml-IN.Text" xml:space="preserve">
    <value>India</value>
  </data>
  <data name="mr-IN.Text" xml:space="preserve">
    <value>India</value>
  </data>
  <data name="pa-IN.Text" xml:space="preserve">
    <value>India</value>
  </data>
  <data name="sa-IN.Text" xml:space="preserve">
    <value>India</value>
  </data>
  <data name="ta-IN.Text" xml:space="preserve">
    <value>India</value>
  </data>
  <data name="te-IN.Text" xml:space="preserve">
    <value>India</value>
  </data>
  <data name="ar-IQ.Text" xml:space="preserve">
    <value>Iraq</value>
  </data>
  <data name="fa-IR.Text" xml:space="preserve">
    <value>Iran, Islamic Republic of</value>
  </data>
  <data name="is-IS.Text" xml:space="preserve">
    <value>Iceland</value>
  </data>
  <data name="it-IT.Text" xml:space="preserve">
    <value>Italy</value>
  </data>
  <data name="en-JM.Text" xml:space="preserve">
    <value>Jamaica</value>
  </data>
  <data name="ar-JO.Text" xml:space="preserve">
    <value>Jordan</value>
  </data>
  <data name="ja-JP.Text" xml:space="preserve">
    <value>Japan</value>
  </data>
  <data name="sw-KE.Text" xml:space="preserve">
    <value>Kenya</value>
  </data>
  <data name="ko-KR.Text" xml:space="preserve">
    <value>Korea, Republic of</value>
  </data>
  <data name="ar-KW.Text" xml:space="preserve">
    <value>Kuwait</value>
  </data>
  <data name="kk-KZ.Text" xml:space="preserve">
    <value>Kazakhstan</value>
  </data>
  <data name="ky-KZ.Text" xml:space="preserve">
    <value>Kazakhstan</value>
  </data>
  <data name="ar-LB.Text" xml:space="preserve">
    <value>Lebanon</value>
  </data>
  <data name="de-LI.Text" xml:space="preserve">
    <value>Liechtenstein</value>
  </data>
  <data name="lt-LT.Text" xml:space="preserve">
    <value>Lithuania</value>
  </data>
  <data name="de-LU.Text" xml:space="preserve">
    <value>Luxembourg</value>
  </data>
  <data name="fr-LU.Text" xml:space="preserve">
    <value>Luxembourg</value>
  </data>
  <data name="lb-LU.Text" xml:space="preserve">
    <value>Luxembourg</value>
  </data>
  <data name="lv-LV.Text" xml:space="preserve">
    <value>Latvia</value>
  </data>
  <data name="ar-LY.Text" xml:space="preserve">
    <value>Libyan Arab Jamahiriya</value>
  </data>
  <data name="ar-MA.Text" xml:space="preserve">
    <value>Morocco</value>
  </data>
  <data name="fr-MC.Text" xml:space="preserve">
    <value>Monaco</value>
  </data>
  <data name="mk-MK.Text" xml:space="preserve">
    <value>Macedonia, the Former Yugoslav Republic of</value>
  </data>
  <data name="mn-MN.Text" xml:space="preserve">
    <value>Mongolia</value>
  </data>
  <data name="zh-MO.Text" xml:space="preserve">
    <value>Macao</value>
  </data>
  <data name="mt-MT.Text" xml:space="preserve">
    <value>Malta</value>
  </data>
  <data name="div-MV.Text" xml:space="preserve">
    <value>Maldives</value>
  </data>
  <data name="es-MX.Text" xml:space="preserve">
    <value>Mexico</value>
  </data>
  <data name="ms-MY.Text" xml:space="preserve">
    <value>Malaysia</value>
  </data>
  <data name="es-NI.Text" xml:space="preserve">
    <value>Nicaragua</value>
  </data>
  <data name="nl-NL.Text" xml:space="preserve">
    <value>Netherlands</value>
  </data>
  <data name="nb-NO.Text" xml:space="preserve">
    <value>Norway</value>
  </data>
  <data name="nn-NO.Text" xml:space="preserve">
    <value>Norway</value>
  </data>
  <data name="se-NO.Text" xml:space="preserve">
    <value>Norway</value>
  </data>
  <data name="sma-NO.Text" xml:space="preserve">
    <value>Norway</value>
  </data>
  <data name="smj-NO.Text" xml:space="preserve">
    <value>Norway</value>
  </data>
  <data name="ne-NP.Text" xml:space="preserve">
    <value>Nepal</value>
  </data>
  <data name="en-NZ.Text" xml:space="preserve">
    <value>New Zealand</value>
  </data>
  <data name="mi-NZ.Text" xml:space="preserve">
    <value>New Zealand</value>
  </data>
  <data name="ar-OM.Text" xml:space="preserve">
    <value>Oman</value>
  </data>
  <data name="es-PA.Text" xml:space="preserve">
    <value>Panama</value>
  </data>
  <data name="es-PE.Text" xml:space="preserve">
    <value>Peru</value>
  </data>
  <data name="quz-PE.Text" xml:space="preserve">
    <value>Peru</value>
  </data>
  <data name="en-PH.Text" xml:space="preserve">
    <value>Philippines</value>
  </data>
  <data name="fil-PH.Text" xml:space="preserve">
    <value>Philippines</value>
  </data>
  <data name="ur-PK.Text" xml:space="preserve">
    <value>Pakistan</value>
  </data>
  <data name="pl-PL.Text" xml:space="preserve">
    <value>Poland</value>
  </data>
  <data name="es-PR.Text" xml:space="preserve">
    <value>Puerto Rico</value>
  </data>
  <data name="pt-PT.Text" xml:space="preserve">
    <value>Portugal</value>
  </data>
  <data name="es-PY.Text" xml:space="preserve">
    <value>Paraguay</value>
  </data>
  <data name="ar-QA.Text" xml:space="preserve">
    <value>Qatar</value>
  </data>
  <data name="ro-RO.Text" xml:space="preserve">
    <value>Romania</value>
  </data>
  <data name="ru-RU.Text" xml:space="preserve">
    <value>Russian Federation</value>
  </data>
  <data name="tt-RU.Text" xml:space="preserve">
    <value>Russian Federation</value>
  </data>
  <data name="ar-SA.Text" xml:space="preserve">
    <value>Saudi Arabia</value>
  </data>
  <data name="se-SE.Text" xml:space="preserve">
    <value>Sweden</value>
  </data>
  <data name="sma-SE.Text" xml:space="preserve">
    <value>Sweden</value>
  </data>
  <data name="smj-SE.Text" xml:space="preserve">
    <value>Sweden</value>
  </data>
  <data name="sv-SE.Text" xml:space="preserve">
    <value>Sweden</value>
  </data>
  <data name="zh-SG.Text" xml:space="preserve">
    <value>Singapore</value>
  </data>
  <data name="sl-SI.Text" xml:space="preserve">
    <value>Slovenia</value>
  </data>
  <data name="sk-SK.Text" xml:space="preserve">
    <value>Slovakia</value>
  </data>
  <data name="sr-SP-Cyrl.Text" xml:space="preserve">
    <value>Somalia</value>
  </data>
  <data name="sr-SP-Latn.Text" xml:space="preserve">
    <value>Somalia</value>
  </data>
  <data name="es-SV.Text" xml:space="preserve">
    <value>El Salvador</value>
  </data>
  <data name="ar-SY.Text" xml:space="preserve">
    <value>Syrian Arab Republic</value>
  </data>
  <data name="syr-SY.Text" xml:space="preserve">
    <value>Syrian Arab Republic</value>
  </data>
  <data name="th-TH.Text" xml:space="preserve">
    <value>Thailand</value>
  </data>
  <data name="ar-TN.Text" xml:space="preserve">
    <value>Tunisia</value>
  </data>
  <data name="tr-TR.Text" xml:space="preserve">
    <value>Turkey</value>
  </data>
  <data name="en-TT.Text" xml:space="preserve">
    <value>Trinidad and Tobago</value>
  </data>
  <data name="zh-TW.Text" xml:space="preserve">
    <value>Taiwan, Province of China</value>
  </data>
  <data name="uk-UA.Text" xml:space="preserve">
    <value>Ukraine</value>
  </data>
  <data name="en-US.Text" xml:space="preserve">
    <value>United States</value>
  </data>
  <data name="es-UY.Text" xml:space="preserve">
    <value>Uruguay</value>
  </data>
  <data name="uz-UZ-Cyrl.Text" xml:space="preserve">
    <value>Uzbekistan</value>
  </data>
  <data name="uz-UZ-Latn.Text" xml:space="preserve">
    <value>Uzbekistan</value>
  </data>
  <data name="es-VE.Text" xml:space="preserve">
    <value>Venezuela</value>
  </data>
  <data name="vi-VN.Text" xml:space="preserve">
    <value>Viet Nam</value>
  </data>
  <data name="ar-YE.Text" xml:space="preserve">
    <value>Yemen</value>
  </data>
  <data name="af-ZA-Cyrl.Text" xml:space="preserve">
    <value>South Africa</value>
  </data>
  <data name="af-ZA-Latn.Text" xml:space="preserve">
    <value>South Africa</value>
  </data>
  <data name="en-ZA.Text" xml:space="preserve">
    <value>South Africa</value>
  </data>
  <data name="nso-ZA.Text" xml:space="preserve">
    <value>South Africa</value>
  </data>
  <data name="tn-ZA.Text" xml:space="preserve">
    <value>South Africa</value>
  </data>
  <data name="xh-ZA.Text" xml:space="preserve">
    <value>South Africa</value>
  </data>
  <data name="zu-ZA.Text" xml:space="preserve">
    <value>South Africa</value>
  </data>
  <data name="en-ZW.Text" xml:space="preserve">
    <value>Zimbabwe</value>
  </data>
  <data name="TableLess_Horizontal_Post.Text" xml:space="preserve">
    <value>&lt;/div&gt;</value>
  </data>
  <data name="TableLess_Horizontal_Pre.Text" xml:space="preserve">
    <value>&lt;div&gt;</value>
  </data>
  <data name="TableLess_Vertical_Post.Text" xml:space="preserve">
    <value>&lt;/div&gt;</value>
  </data>
  <data name="TableLess_Vertical_Pre.Text" xml:space="preserve">
    <value>&lt;div&gt;</value>
  </data>
  <data name="Tables_Horizontal_Mid.Text" xml:space="preserve">
    <value>&lt;/td&gt;&lt;td&gt;</value>
  </data>
  <data name="Tables_Horizontal_Post.Text" xml:space="preserve">
    <value>&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</value>
  </data>
  <data name="Tables_Horizontal_Pre.Text" xml:space="preserve">
    <value>&lt;table class=""MLLanguageMenuLayoutTable"" cellspacing=""0""&gt;&lt;tr class=""MLLanguageMenuLayoutTableRow1""&gt;&lt;td&gt;</value>
  </data>
  <data name="Tables_Vertical_Mid.Text" xml:space="preserve">
    <value>&lt;/td&gt;&lt;/tr&gt;&lt;tr class=""MLLanguageMenuLayoutTableRow2""&gt;&lt;td&gt;</value>
  </data>
  <data name="Tables_Vertical_Post.Text" xml:space="preserve">
    <value>&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</value>
  </data>
  <data name="Tables_Vertical_Pre.Text" xml:space="preserve">
    <value>&lt;table class=""MLLanguageMenuLayoutTable"" cellspacing=""0""&gt;&lt;tr class=""MLLanguageMenuLayoutTableRow1""&gt;&lt;td&gt;</value>
  </data>
  <data name="About.Text" xml:space="preserve">
    <value>About...</value>
  </data>
</root>